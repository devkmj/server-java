# 허재가 프로젝트 셋업 때 마다 들고 다니는 compose.yml ( 들고다닌지 좀 되서 버전이 좀 낮을 수도.. )
# 저장 위치 : 프로젝트/docker/infra-compose.yml
# 로컬 프로필에서 실행할 때 docker-compose -f ./docker/infra-compose.yml up

#version: '3'
services:
  mysql:
    image: public.ecr.aws/bitnami/mysql:5.7
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=display
      - MYSQL_CHARACTER_SET=utf8mb4
      - MYSQL_COLLATE=utf8mb4_general_ci
    volumes:
      - mysql-5-7-data:/bitnami/mysql/data
  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_data:/data
      - redis_config:/usr/local/etc/redis/redis.conf
  kafka:
    image: public.ecr.aws/bitnami/kafka:3.5.1
    ports:
      - "9094:9094"
    volumes:
      - kafka-data:/bitnami/kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@127.0.0.1:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
#  mongodb:
#    image: mongo:6.0
#    container_name: mongodb
#    restart: always
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: application
#      MONGO_INITDB_ROOT_PASSWORD: application
#      MONGO_INITDB_DATABASE: display
#    volumes:
#      - mongodb_data:/data/db
#      - mongodb_config:/data/configdb

volumes:
  mysql-5-7-data:
  redis_data:
  redis_config:
  kafka-zookeeper-data:
  kafka-data:
#  mongodb_data:
#  mongodb_config:

networks:
  default:
    driver: bridge